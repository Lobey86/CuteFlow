Role:
  tableName: cf_role
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    description: { type: string(100) }

Credential:
  tableName: cf_credential
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    usermodule: { type: string(100) }
    usergroup: { type: string(100) }
    userright: { type: string(100) }
    usermoduleposition: { type: integer(1), length: 3 }
    usergroupposition: { type: integer(1), length: 3 }
  relations:
    Roles: {class: Role, foreignAlias: Credentials, local: credential_id, refClass: CredentialRole}
      
CredentialRole:
   tableName: cf_credentialrole
   columns:
     role_id: { type: integer(10), primary: true }
     credential_id: { type: integer(10), primary: true }

UserData:
  tableName: cf_userdata
  columns:
    user_id: { type: integer, length: 10, primary: true }
    firstname: { type: string(100) }
    lastname: { type: string(100) }
    street: { type: string(100) }
    zip: { type: string(100) }
    city: { type: string(100) }
    country: { type: string(100) }
    phone1: { type: string(100) }
    phone2: { type: string(100) }
    mobile: { type: string(100) }
    fax: { type: string(100) }
    organisation: { type: string(100) }
    department: { type: string(100) }
    burdencenter: { type: string(100) }
    comment: { type: string(1000) }
    lastaction: timestamp
  relations:
    UserLogin: { class: UserLogin, local: user_id, foreign: id, foreignType: one, type: one }

UserLogin:
  tableName: cf_userlogin
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    role_id: { type: integer, length 10}
    username: { type: string(100) }
    password: { type: string(100) }
    email: { type: string(100) }
  relations:
    Role: { class: Role, local: role_id, foreign: id, foreignType: many, type: one }



UserSetting:
  tableName: cf_usersetting
  columns:
    user_id: { type: integer, length: 10}
    markyellow: { type: string(45)}
    markred: { type: string(45)}
    markorange: { type: string(45)}
    refreshtime: { type: integer, default: 180}
    displayeditem: { type: integer, default: 25}
    durationtype: { type: string(45) }
    durationlength: { type: string(45) }
    emailformat: { type: string(100) }
    emailtype: { type: string(100) }
    circulationdefaultsortcolumn: { type: string(45) }
    circulationdefaultsortdirection: { type: string(45) }
    showcirculationinpopup: {type: integer(1), length: 3}
  relations:
    UserLogin: { class: UserLogin, local: user_id, foreign: id, foreignType: one, type: one, onDelete: CASCADE }

UserAgent:
  tableName: cf_useragent
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    user_id: { type: integer, length: 10}
    useragent_id: { type: integer, length: 10 }
    position: {type: integer(1), length: 3}
  relations:
    UserLogin: { class: UserLogin, local: user_id, foreign: id, foreignType: many, type: one, onDelete: CASCADE }
    UserLogin: { class: UserLogin, local: useragent_id, foreign: id, foreignType: many, type: many, onDelete: CASCADE }





EmailConfiguration:
  tableName: cf_emailconfiguration
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    smtphost: { type: string(100)}
    smtpuseauth: { type: string(100)}
    smtpport: { type: string(100)}
    smtpusername: { type: string(100)}
    smtppassword: { type: string(100)}
    smtpencryption: { type: string(100)}
    sendmailpath: { type: string(100)}
    systemreplyaddress: { type: string(100)}
    activetype: { type: string(20)}

SystemConfiguration:
  tableName: cf_systemconfiguration
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    language: { type: string(20), default: en_US}
    showpositioninmail: { type: integer(1), length: 3}
    allowunencryptedrequest: { type: integer(1), length: 3}
    sendreceivermail: { type: integer(1), length: 3}
    sendremindermail: {type: integer(1), length: 3}
    visibleslots: { type: string(45) }

AuthenticationConfiguration:
  tableName: cf_authenticationconfiguration
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    authenticationtype: { type: string(100)}
    ldaphost: { type: string(100)}
    ldapdomain: { type: string(100)}
    ldapbindusernameandcontext: { type: string(100)}
    ldappassword: { type: string(100)}
    ldaprootcontext: { type: string(100)}
    ldapusersearchattribute: { type: string(100)}
    ldapfirstname: { type: string(100)}
    ldaphost: { type: string(100)}
    ldaplastname: { type: string(100)}
    ldapusername: { type: string(100)}
    ldapemail: { type: string(100)}
    ldapoffice: { type: string(100)}
    ldapphone: { type: string(100)}
    ldapcontext: { type: string(100)}
    openidserver: { type: string(100)}

UserConfiguration:
  tableName: cf_userconfiguration
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    role_id: { type: integer, length: 10}
    durationtype: { type: string(45) }
    durationlength: { type: string(45) }
    displayeditem: { type: string(45) }
    refreshtime: { type: string(45) }
    markyellow: { type: string(45) }
    markred: { type: string(45) }
    markorange: { type: string(45) }
    password: { type: string(45) }
    emailformat: { type: string(45) }
    emailtype: { type: string(45) }
    showcirculationinpopup: {type: integer(1), length: 3}
    circulationdefaultsortcolumn: { type: string(45) }
    circulationdefaultsortdirection: { type: string(45) }
  relations:
    Role: { class: Role, local: role_id, foreign: id, foreignType: many, type: one }


UserWorkflowConfiguration:
  tableName: cf_userworkflowconfiguration
  columns:
    user_id: { type: integer, length: 10, primary: true  }
    columntext: { type: string(45)}
    isactive: { type: string(10)}
    position: { type: integer(1), length: 3}
  relations:
    UserLogin: { class: UserLogin, local: user_id, foreign: id, foreignType: one, type: one, onDelete: CASCADE }



WorkflowConfiguration:
  tableName: cf_workflowconfiguration
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    columntext: { type: string(45)}
    isactive: { type: string(10)}
    position: { type: integer(1), length: 3}

AdditionalText:
  tableName: cf_additionaltext
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    title: { type: string(100)}
    content: { type: string(5000)}
    contenttype: { type: string(45)}
    isactive: { type: integer(1), length: 3 }



    