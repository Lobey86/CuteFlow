<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class UserLoginTable extends Doctrine_Table {

    /**
     * create new instance of userlogintable
     * @return object UserLoginTable
     */
    public static function instance() {
        return Doctrine::getTable('UserLogin');
    }


    /**
     * Find user by name and password
     * 
     * @param sfWebRequest $request, request with post data
     * @return Doctrine_Collection
     */
    public function findUserByNameAndPassword($username, $password) {
        return Doctrine_Query::create()
            ->select('ul.*')
            ->from('UserLogin ul')
            ->where('ul.username = ?', $username)
            ->andWhere('ul.password = ?',$password)
            ->andWhere('ul.deleted = ?', 0)
            ->execute();
    }

    /**
     *
     * @param String $receiver, can be ALL, SENDER, ONLINE
     * @return Doctrine_Collection
     */
    public function getUserDataByReceiver($receiver) {
        $query = Doctrine_Query::create()
            ->from('UserLogin ul')
            ->select('CONCAT(ud.firstname,\' \',ud.lastname) AS name, ul.email')
            ->leftJoin('ul.UserData ud');

        if($receiver == 'ALL') { // send to all
            // do nothing
        }
        elseif($receiver == 'SENDER') { // sender only

        }
        else { // online

        }
        return $query->execute();
    }

    /**
     * Get total sum of users
     *
     * @return Doctrine_Collection
     */
    public function getTotalSumOfUser() {
        return Doctrine_Query::create()
                ->select('COUNT(*) AS anzahl')
                ->from('UserLogin ul')
                ->where('ul.deleted = ?', 0)
                ->execute();
    }

    /**
     * Functions loads all users.
     *
     * @param int $limit, limit is optional paramater, when load all users without pagin, set limit -1
     * @param int $offset, offset is optional paramater, when load all users without pagin, set offset -1
     * @return Doctrine_Collection
     */
    public function getAllUser($limit, $offset) {
        $query = Doctrine_Query::create()
                ->select('ul.*')
                ->from('UserLogin ul')
                ->orderby('ul.id DESC');

        if($limit != -1 AND $offset != -1) {
            $query->limit($limit)
                  ->offset($offset);
        }
        
        return $query->where('ul.deleted = ?', 0)
                     ->execute();
    }

    /**
     * Function deletes users. Own profile cannot be deleted.
     * $currentUserId = Session ID of logged user
     *
     * @param int $idToDelete, ID of the user to delete
     * @param int $currentUserId, ID of the logged in user....
     * @return true
     */
    public function deleteUser($idToDelete, $currentUserId) {
        Doctrine_Query::create()
            ->update('UserLogin ul')
            ->set('ul.deleted','?',1)
            ->where('ul.id = ?', $idToDelete)
            ->andWhere('ul.id != ?', $currentUserId)
            ->execute();
        return true;
    }

    /**
     * Loads user by username
     * @param string$username, username to load
     * @return Doctrine_Collection
     */
    public function findUserByUsername($username) {
        return Doctrine_Query::create()
            ->from('UserLogin ul')
            ->where('ul.username = ?', $username)
            ->execute();
    }

    /**
     * Find User by its id
     * @param int $id
     * @return Doctrine_Collection
     */
    public function findUserById($id) {
        return Doctrine_Query::create()
            ->select('ul.*')
            ->from('UserLogin ul')
            ->where('ul.id = ?',$id)
            ->andWhere('ul.deleted = ?', 0)
            ->execute();
    }

    /**
     * Update Userdata
     * @param array $data, Post data
     * @param int $user_id, User_id
     * @return true
     */
    public function updateUser($data, $user_id) {
        $userlogin = Doctrine_Query::create()
               ->update('UserLogin ul')
               ->set('ul.password','?',$data['userFirstTab_password'])
               ->set('ul.email','?',$data['userFirstTab_email'])
               ->where('ul.id = ?', $user_id);
        if(isset($data['userFirstTab_userrole']) AND is_numeric($data['userFirstTab_userrole'])) {
            $userlogin->set('ul.role_id','?',$data['userFirstTab_userrole']);
        }
        $userlogin->execute();
        return true;
    }

    
    

}