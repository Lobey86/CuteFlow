Role:
  actAs: [SoftDelete]
  tableName: cf_role
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    description: { type: string(100) }

Credential:
  tableName: cf_credential
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    usermodule: { type: string(100) }
    usergroup: { type: string(100) }
    userright: { type: string(100) }
    usermoduleposition: { type: integer(1), length: 3 }
    usergroupposition: { type: integer(1), length: 3 }
  relations:
    Roles: {class: Role, foreignAlias: Credentials, local: credential_id, refClass: CredentialRole}
      
CredentialRole:
   actAs: [SoftDelete]
   tableName: cf_credentialrole
   columns:
     role_id: { type: integer(10), primary: true }
     credential_id: { type: integer(10), primary: true }

UserData:
  tableName: cf_userdata
  columns:
    user_id: { type: integer, length: 10, primary: true }
    firstname: { type: string(100) }
    lastname: { type: string(100) }
    street: { type: string(100) }
    zip: { type: string(100) }
    city: { type: string(100) }
    country: { type: string(100) }
    phone1: { type: string(100) }
    phone2: { type: string(100) }
    mobile: { type: string(100) }
    fax: { type: string(100) }
    organisation: { type: string(100) }
    department: { type: string(100) }
    burdencenter: { type: string(100) }
    comment: { type: string(1000) }
    lastaction: timestamp
  relations:
    UserLogin: { class: UserLogin, local: user_id, foreign: id, foreignType: one, type: one }

UserLogin:
  actAs: [SoftDelete]
  tableName: cf_userlogin
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    role_id: { type: integer, length 10}
    username: { type: string(100) }
    password: { type: string(100) }
    email: { type: string(100) }
  relations:
    Role: { class: Role, local: role_id, foreign: id, foreignType: many, type: one }
    MailinglistAllowedSender: { class: MailinglistAllowedSender, local: id, foreign: user_id, foreignType: many, type: one }
    MailinglistUser: { class: MailinglistUser, local: id, foreign: user_id, foreignType: many, type: one }

UserWorkflowConfiguration:
  tableName: cf_userworkflowconfiguration
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    user_id: { type: integer, length: 10 }
    field_id: {type: integer, length: 10 }
    columntext: { type: string(45)}
    isactive: { type: string(10)}
    position: { type: integer(1), length: 3}
  relations:
    UserLogin: { class: UserLogin, local: user_id, foreign: id, foreignType: one, type: many}
    Field: { class: Field, local: field_id, foreign: id, foreignType: one, type: many}

UserSetting:
  tableName: cf_usersetting
  columns:
    user_id: { type: integer, length: 10,  primary: tru}
    markyellow: { type: string(45)}
    markred: { type: string(45)}
    markorange: { type: string(45)}
    refreshtime: { type: integer, default: 180}
    displayeditem: { type: integer, default: 25}
    durationtype: { type: string(45) }
    durationlength: { type: string(45) }
    emailformat: { type: string(100) }
    emailtype: { type: string(100) }
    circulationdefaultsortcolumn: { type: string(45) }
    circulationdefaultsortdirection: { type: string(45) }
    showcirculationinpopup: {type: integer(1), length: 3}
    firstlogin: {type: integer(1), length: 3}
  relations:
    UserLogin: { class: UserLogin, local: user_id, foreign: id, foreignType: one, type: one }

UserAgent:
  tableName: cf_useragent
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    user_id: { type: integer, length: 10}
    useragent_id: { type: integer, length: 10 }
    position: {type: integer(1), length: 3}
  relations:
    UserData: { class: UserData, local: user_id, foreign: user_id, foreignType: many, type: one }
    UserData: { class: UserData, local: useragent_id, foreign: user_id, foreignType: many, type: many }





EmailConfiguration:
  tableName: cf_emailconfiguration
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    smtphost: { type: string(100)}
    smtpuseauth: { type: string(100)}
    smtpport: { type: string(100)}
    smtpusername: { type: string(100)}
    smtppassword: { type: string(100)}
    smtpencryption: { type: string(100)}
    sendmailpath: { type: string(100)}
    systemreplyaddress: { type: string(100)}
    activetype: { type: string(20)}

SystemConfiguration:
  tableName: cf_systemconfiguration
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    language: { type: string(20), default: en_US}
    showpositioninmail: { type: integer(1), length: 3}
    allowunencryptedrequest: { type: integer(1), length: 3}
    sendreceivermail: { type: integer(1), length: 3}
    sendremindermail: {type: integer(1), length: 3}
    visibleslots: { type: string(45) }

AuthenticationConfiguration:
  tableName: cf_authenticationconfiguration
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    authenticationtype: { type: string(20)}
    ldaphost: { type: string(100)}
    ldapdomain: { type: string(100)}
    ldapbindusernameandcontext: { type: string(100)}
    ldappassword: { type: string(100)}
    ldaprootcontext: { type: string(100)}
    ldapusersearchattribute: { type: string(100)}
    ldapfirstname: { type: string(100)}
    ldaphost: { type: string(100)}
    ldaplastname: { type: string(100)}
    ldapusername: { type: string(100)}
    ldapemail: { type: string(100)}
    ldapoffice: { type: string(100)}
    ldapphone: { type: string(100)}
    ldapcontext: { type: string(100)}
    ldapadduser: {type: integer(1), length: 3}
    openidserver: { type: string(100)}
    firstlogin: {type: integer(1), length: 3}


UserConfiguration:
  tableName: cf_userconfiguration
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    role_id: { type: integer, length: 10}
    durationtype: { type: string(45) }
    durationlength: { type: string(45) }
    displayeditem: { type: string(45) }
    refreshtime: { type: string(45) }
    markyellow: { type: string(45) }
    markred: { type: string(45) }
    markorange: { type: string(45) }
    password: { type: string(45) }
    emailformat: { type: string(45) }
    emailtype: { type: string(45) }
    showcirculationinpopup: {type: integer(1), length: 3}
    circulationdefaultsortcolumn: { type: string(45) }
    circulationdefaultsortdirection: { type: string(45) }
  relations:
    Role: { class: Role, local: role_id, foreign: id, foreignType: many, type: one }

WorkflowConfiguration:
  tableName: cf_workflowconfiguration
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    columntext: { type: string(45)}
    isactive: { type: string(10)}
    position: { type: integer(1), length: 3}

AuthorizationConfiguration:
  tableName: cf_authorizationconfiguration
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    type: { type: string(45)}
    deleteworkflow: { type: integer(1), length: 3}
    archiveworkflow: { type: integer(1), length: 3}
    stopneworkflow: { type: integer(1), length: 3}
    detailsworkflow: { type: integer(1), length: 3}



AdditionalText:
  actAs: [SoftDelete]
  tableName: cf_additionaltext
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    title: { type: string(100)}
    content: { type: string(5000)}
    contenttype: { type: string(45)}
    isactive: { type: integer(1), length: 3 }


Field:
  actAs: [SoftDelete]
  tableName: cf_field
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    title: { type: string(100)}
    type: { type: string(20)}
    writeprotected: { type: integer(1), length: 3 }
    color: { type: string(20)}
  relations:
    DocumenttemplateField: { class: DocumenttemplateField, local: id, foreign: field_id, foreignType: many, type: one }

FieldTextfield:
  tableName: cf_fieldtextfield
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    field_id: { type: integer, length: 10 }
    regex: {type: string(100) }
    defaultvalue: {type: string(100) }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }

FieldCheckbox:
  tableName: cf_fieldcheckbox
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    field_id: { type: integer, length: 10 }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }

FieldNumber:
  tableName: cf_fieldnumber
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    field_id: { type: integer, length: 10 }
    regex: {type: string(100) }
    defaultvalue: {type: string(100) }
    comboboxvalue: {type: string(40) }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }

FieldDate:
  tableName: cf_fielddate
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    field_id: { type: integer, length: 10 }
    regex: {type: string(100) }
    defaultvalue: {type: string(100) }
    dateformat: {type: string(40) }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }

FieldFile:
  tableName: cf_fieldfile
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    field_id: { type: integer, length: 10 }
    regex: {type: string(100) }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }

FieldCombobox:
  tableName: cf_fieldcombobox
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    field_id: { type: integer, length: 10 }
    value: {type: string(100) }
    isactive: { type: integer(1), length: 3 }
    position: { type: integer(1), length: 3 }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }

FieldCheckboxgroup:
  tableName: cf_fieldcheckboxgroup
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    field_id: { type: integer, length: 10 }
    value: {type: string(100) }
    isactive: { type: integer(1), length: 3 }
    position: { type: integer(1), length: 3 }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }

FieldRadiogroup:
  tableName: cf_fieldradiogroup
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    field_id: { type: integer, length: 10 }
    value: {type: string(100) }
    isactive: { type: integer(1), length: 3 }
    position: { type: integer(1), length: 3 }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }

FieldTextarea:
  tableName: cf_fieldtextarea
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    field_id: { type: integer, length: 10 }
    contenttype: {type: string(45) }
    content: {type: string(5000) }
  relations:
    Field: { class: Field, local: field_id, foreign: id, foreignType: many, type: one }



DocumenttemplateTemplate:
  actAs: [SoftDelete, Timestampable]
  tableName: cf_documenttemplatetemplate
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    name: { type: string(100) }    
  relations:
    DocumenttemplateVersion: { class: DocumenttemplateVersion, local: id, foreign: documenttemplate_id, foreignType: many, type: one }
    MailinglistTemplate: { class: MailinglistTemplate, local: id, foreign: documenttemplatetemplate_id, foreignType: many, type: one }

DocumenttemplateVersion:
  actAs: [Timestampable]
  tableName: cf_documenttemplateversion
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    documenttemplate_id: { type: integer, length: 10 }
    version: { type: integer(1), length: 3 }
    activeversion: { type: integer(1), length: 3 }
  relations:
    DocumenttemplateSlot: { class: DocumenttemplateSlot, local: id, foreign: documenttemplateversion_id, foreignType: many, type: one }



DocumenttemplateSlot:
  tableName: cf_documenttemplateslot
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    documenttemplateversion_id: { type: integer, length: 10 }
    name: { type: string(100) }
    sendtoallreceivers: { type: integer(1), length: 3 }
    position: { type: integer(1), length: 3 }
  relations:
    DocumenttemplateField: { class: DocumenttemplateField, local: id, foreign: documenttemplateslot_id, foreignType: many, type: one }
    MailinglistSlot: { class: MailinglistSlot, local: id, foreign: slot_id, foreignType: many, type: one }

DocumenttemplateField:
  tableName: cf_documenttemplatefield
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    documenttemplateslot_id: { type: integer, length: 10 }
    field_id: { type: integer, length: 10 }
    position: { type: integer(1), length: 3 }


MailinglistTemplate:
   actAs: [SoftDelete,Timestampable]
   tableName: cf_mailinglisttemplate
   columns:
     id: { type: integer, length: 10, primary: true, autoincrement: true }
     documenttemplatetemplate_id : { type: integer, length: 10}
     name: {type: string(100) }
     isactive: { type: string(10)}
   relations:
     MailinglistVersion: { class: MailinglistVersion, local: id, foreign: mailinglisttemplate_id, foreignType: many, type: one }

MailinglistVersion:
  actAs: [Timestampable]
  tableName: cf_mailinglistversion
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    mailinglisttemplate_id: { type: integer, length: 10 }
    version: { type: integer(1), length: 3 }
    activeversion: { type: integer(1), length: 3 }
  relations:
    MailinglistAuthorizationSetting: { class: MailinglistAuthorizationSetting, local: id, foreign: mailinglistversion_id, foreignType: many, type: one }
    MailinglistAllowedSender: { class: MailinglistAllowedSender, local: id, foreign: mailinglistversion_id, foreignType: many, type: one }
    
MailinglistAuthorizationSetting:
  tableName: cf_mailinglistauthorizationsetting
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    mailinglistversion_id: { type: integer, length: 10 }
    type: { type: string(45)}
    deleteworkflow: { type: integer(1), length: 3}
    archiveworkflow: { type: integer(1), length: 3}
    stopneworkflow: { type: integer(1), length: 3}
    detailsworkflow: { type: integer(1), length: 3}

MailinglistAllowedSender:
  tableName: cf_mailinglistallowedsender
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    mailinglistversion_id: { type: integer, length: 10 }
    user_id: { type: integer, length: 10 }
    position: { type: integer(1), length: 3 }

MailinglistSlot:
  tableName: cf_mailinglistslot
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    mailinglistversion_id: { type: integer, length: 10 }
    slot_id: { type: integer, length: 10 }
    position: { type: integer(1), length: 3 }
  relations:
    MailinglistUser: { class: MailinglistUser, local: id, foreign: mailinglistslot_id, foreignType: many, type: one }

MailinglistUser:
  tableName: cf_mailinglistuser
  columns:
    id: { type: integer, length: 10, primary: true, autoincrement: true }
    mailinglistslot_id: { type: integer, length: 10 }
    user_id: { type: integer, length: 10 }
    position: { type: integer(1), length: 3 }

    